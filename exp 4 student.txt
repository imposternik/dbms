Exp 4 
CREATE TABLE students (
    student_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    branch VARCHAR(50) NOT NULL,
    join_year INT CHECK (join_year >= 2020)
);

CREATE TABLE courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    credits INT CHECK (credits > 0)
);

CREATE TABLE enrollments (
    enroll_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    enroll_date DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY (student_id) REFERENCES students(student_id),
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
);

-- Students
INSERT INTO students VALUES 
(1, 'Rahul Verma', 'Computer Science', 2023),
(2, 'Priya Desai', 'Electronics', 2023),
(3, 'Amit Shah', 'Mechanical', 2022);

-- Courses
INSERT INTO courses VALUES 
(101, 'Database Management', 4),
(102, 'Data Structures', 4),
(103, 'Digital Electronics', 3);

-- Enrollments
INSERT INTO enrollments VALUES 
(1, 1, 101, '2025-04-10'),
(2, 1, 102, '2025-04-10'),
(3, 2, 102, '2025-04-11');

UPDATE courses
SET credits = 5
WHERE course_id = 101;

DELETE FROM enrollments
WHERE enroll_id = 3;

SELECT 
    e.enroll_id,
    s.name AS student_name,
    c.course_name,
    c.credits,
    e.enroll_date
FROM enrollments e
JOIN students s ON e.student_id = s.student_id
JOIN courses c ON e.course_id = c.course_id;


SELECT 
    c.course_name,
    COUNT(e.enroll_id) AS total_enrollments
FROM courses c
LEFT JOIN enrollments e ON c.course_id = e.course_id
GROUP BY c.course_id, c.course_name;

-- Create faculty user
CREATE USER 'faculty'@'localhost' IDENTIFIED BY 'faculty123';
GRANT SELECT, INSERT, UPDATE ON your_database_name.* TO 'faculty'@'localhost';

-- Create admin user
CREATE USER 'admin'@'localhost' IDENTIFIED BY 'admin123';
GRANT ALL PRIVILEGES ON your_database_name.* TO 'admin'@'localhost';

DROP TABLE IF EXISTS enrollments;
DROP TABLE IF EXISTS courses;
DROP TABLE IF EXISTS students;